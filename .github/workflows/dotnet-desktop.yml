name: üéÆ HELLRUN - Multi-Platform Unity Build & Auto Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  UNITY_VERSION: 2023.2.0f1
  PROJECT_PATH: .
  BUILD_PATH: build

jobs:
  build-windows:
    name: ü™ü Build for Windows
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: ‚öôÔ∏è Cache Unity
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}

      - name: üß© Build Windows
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          projectPath: ${{ env.PROJECT_PATH }}
          buildName: HELLRUN-Windows

      - name: üì¶ Upload Windows Build
        uses: actions/upload-artifact@v3
        with:
          name: HELLRUN-Windows
          path: build/StandaloneWindows64

  build-webgl:
    name: üåê Build for WebGL
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Cache Unity
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}

      - name: üß© Build WebGL
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: WebGL
          projectPath: ${{ env.PROJECT_PATH }}
          buildName: HELLRUN-WebGL

      - name: üì¶ Upload WebGL Build
        uses: actions/upload-artifact@v3
        with:
          name: HELLRUN-WebGL
          path: build/WebGL

  build-android:
    name: ü§ñ Build for Android (APK)
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Cache Unity
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}

      - name: üß© Build Android
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: Android
          projectPath: ${{ env.PROJECT_PATH }}
          buildName: HELLRUN-Android

      - name: üì¶ Upload Android Build
        uses: actions/upload-artifact@v3
        with:
          name: HELLRUN-Android
          path: build/Android

  release:
    name: üöÄ Create GitHub Release
    needs: [build-windows, build-webgl, build-android]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: üì¶ Download All Builds
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}

      - name: üè∑Ô∏è Generate Version Tag
        id: version
        run: |
          echo "TAG=v1.$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
          echo "Generated tag $TAG"

      - name: üöÄ Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/**
          tag_name: ${{ env.TAG }}
          name: "HELLRUN Multi-Platform Release ${{ env.TAG }}"
          body: |
            üïπÔ∏è **HELLRUN Automatic Multi-Platform Build**
            - Windows: ‚úÖ
            - WebGL: ‚úÖ
            - Android (APK): ‚úÖ
            - Built with Unity ${{ env.UNITY_VERSION }}
            - Release generated on: ${{ env.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
